
$justify-value : center;
$align-value : center;
$direction-value : column;
/*
  SCSS는 값을 미리 담아놓는 '변수(variable)' 기능을 지원합니다.
  미리 선언(declaration)해두면 원할때 편하게 한번에 지정된 값을 바꿀 수 있습니다.
  변수는 '값'을 담아놓는다는 개념이 중요합니다.
*/
@mixin flex-setting($justify, $align, $direction:row) {
  /*
  SCSS는 @mixin 문법을 지원합니다.
  변수가 '값'을 담아놓는 기능을 목적으로 만들어 두었다면,
  @mixin 은 특정한 속성들 '꾸러미'를 담아놓는 것이 목적입니다.

  똑같은 꾸러미 라면 CSS의 .class 문법을 활용하는 것이 더욱 간편하지만,
  위와 같이 "무슨 값이든" 유연하게 대처할 수 있는 것이 큰 장점입니다.
  유연하게 작성하고자 지원하는 @mixin 문법은 물리적으로 '표시(markup)'를 해야하는 CSS 작성 작업에서 탁월하게 생산성을 높혀줍니다.
  */
  display:flex;
  // 해당 @mixin 목적상 display:flex는 변동이 없이 사용할 예정이기 때문에 직접 값을 지정해주었습니다.
  justify-content:$justify;
  align-items: $align;
  // 위에 작성된 @mixin (소괄호)에 원하는 값을 넣게끔 자리를 마련해두었습니다.
  flex-direction: $direction;
  // $direction 부분 소괄호가 특이한데, 사용하지 않을때는 row 라는 값을 쓰겠다는 뜻입니다.
  // 이러한 개념을 기본값 = 디폴트(default) 설정 이라고 합니다.
}
#root {
  width:100vw;
  height:100vh;
  background-color: #333;
  @include flex-setting($justify-value, $align-value);
  // 결과적으로 flex 속성의 하위속성인 justify-content와 align-items를 원하는 값으로 설정한 것으로 설정하기 위해 미리 선언된 변수를 '할당(assignment)' 했습니다.
}